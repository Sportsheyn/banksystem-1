plugins {
    id 'java-library'
    id 'application'
}

application {
     mainClass = 'myproject.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.25.Final'


    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

jar {
    duplicatesStrategy = 'exclude'
    manifest {
        attributes "Main-Class": "myproject.Main"
 }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Doesnt work
task myJar(type: Jar) {
    duplicatesStrategy = 'exclude'
    manifest {
        attributes "Main-Class": "myproject.Main"
    }
    from {
        configurations.runtimeClasspath.collect {{ println it.getAbsolutePath(); it.isDirectory() ? it : zipTree(it)} }

    }
    from {
        sourceSets.main.output
    }
    exclude "myproject/pro/commands/*"

    archiveFileName = "contentWithoutPro.jar"
    destinationDirectory = file("$projectDir/build/libs")

}


task myZip(type: Zip) {

    //Project directory
    from "$projectDir" //./build

    //Directory to output ZIP file
    destinationDirectory = file("$projectDir/build/zip")

    //File name to archive
    archiveFileName = "content.zip"

    //first star -all files in /docs; second star -all files of the files in /docs
    include "build/docs/**"
    include "build/libs/**" //$projectDir/build/libs/** ging nicht
    include "src/main/**"

    println "$projectDir"
}

// without the task javadoc would fail (but it would perform the task
tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task javadocAndZip {
    dependsOn 'javadoc'
    dependsOn 'myZip'
    tasks.findByName('javadoc').mustRunAfter 'myZip'
}
